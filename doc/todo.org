# openloop

- replacing, quantized or not
  - including resampling
- double length
  - or multiply by integer
- song sections
  - go to 'future mode', select actions (rec, play) per loop
  -> on next beat (or bar): apply
- start and stop by pressing:
  - if playing: stop
    - if button held: start again on release, else remain  stopped
  - if stopped: play
    - if button held: stop playing on release, else remain playing
- dynamic realign:
  - loop is recorded with upbeat, when restarting it would normally start in the middle. set the bar start at the 1
  - use  find-transient-around
  - also needed to sync lfo's and such.
- instant sampling (for playing chords or auto-slicing beats)
  - use find-transient around

- find-transient-around [centre range]:
  - look 'range' ms before and after 'centre' for a transient.


# sound fx / presets

- organize by genre -> sub-genre
- organize by timbre similarity (pd lib)

# design principles:
- functional to enable undo
- reactive
- immutable: record all audio ,actions
- minimal state needed:
  - global
    - current sample
    - tempo
    - downbeat
    - chord ?
  - per loop:
    - start sample
    - length
    -


# visual:
- show loop like freewheeling:
  - circles
  - waveform plus pie diagram for time overlaid
  - whole thing scales with VU.
  - with dynamic length:
    - starts at say 100 ms per circle and when it reaches full circle it scales time.



# workflow
- master loop:
  - count in (aka tap tempo)
    - at 2nd tap button starts flashing in tempo
    - set loop start at sound start
    - set loop sync point (aka beat 1) to first beat where there was no tap
      - (find-transient-around phantom-beat (measure-to-ms 1/16))
    - start tempo tracking within x % of tapped tempo
    - visualize what loop length would be if key would be pressed now
      - show measures overlayed on waveform with colours representing accents:
        - beat and bar
        - block, meaning:
          - when 'now' is between bar 1 and 1.5 we asume a one bar loop will be made
          - at 1.5 we assume 2 bars: bar 1 accent
          - at 2.5 we assume 3 bars: bar 1 accent
          - at 3.5 we assume 4 bars: bar 1 and 3 accents
          - at 5 -> looplength 6, accents 1 4
          - at 7 ll 8 ac 1 (3 half accented) 5 (7)
          - at 10 ll 12 ac 1 (3) 5 (7) 9 (11)
          - or ac 1 (4) 7 (10)
          - at 14 ll 16 ac 1 (3) 5 (7) 9 (11) 13 (15)
  - when pressing the same key: stop recording, start looping.
  - when pressing another key: stop recording one loop, start looping, start recording next loop.
